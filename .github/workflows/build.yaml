on:
  workflow_dispatch: {}

jobs:
  PreBuild:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.getVersion.outputs.version }}

    steps:
      - uses: actions/checkout@v5

      - id: getVersion
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -e
          version=$(python3 -c "from Utils.Consts import ABOUT; print(ABOUT['Version'])")
          echo "version=$version"
          echo "version=$version" >> "$GITHUB_OUTPUT"
    
      - id: tag
        run: |
          set -e
          git fetch --tags --quiet
          TAG="v${{ steps.getVersion.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists; skipping."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag "$TAG"
            git push origin "$TAG"
          fi
      
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.getVersion.outputs.version }}
          name: Release v${{ steps.getVersion.outputs.version }}
          draft: false
          prerelease: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  BuildWindows:
    needs: PreBuild
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: windows-2025
            arch: x64
          # - os: windows-11-arm
          #   arch: arm64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka

      - name: build
        shell: pwsh
        run: >
          python -m nuitka main.py
          --standalone
          --assume-yes-for-downloads
          --windows-console-mode=disable
          --msvc=latest
          --include-data-dir=Fonts=Fonts
          --output-filename=SuzerainSaveEditor.exe

      - name: zip
        shell: pwsh
        run: |
          $ver = "${{ needs.PreBuild.outputs.version }}"
          $zip = "SuzerainSaveEditor-Windows-${{ matrix.arch }}-v$ver.zip"
          if (!(Test-Path "main.dist")) { throw "main.dist not found" }
          if (Test-Path $zip) { Remove-Item $zip -Force }
          Compress-Archive -Path "main.dist\*" -DestinationPath $zip

      - name: upload
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.PreBuild.outputs.version }}
          files: SuzerainSaveEditor-Windows-${{ matrix.arch }}-v${{ needs.PreBuild.outputs.version }}.zip
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  BuildLinux:
    needs: PreBuild
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x64
          # - os: ubuntu-22.04-arm
          #   arch: arm64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - run: |
          sudo apt-get update
          sudo apt-get install -y build-essential patchelf zip p7zip-full

      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka

      - name: build
        run: |
          python -m nuitka main.py \
            --standalone \
            --static-libpython=no \
            --assume-yes-for-downloads \
            --include-data-dir=Fonts=Fonts \
            --output-filename=SuzerainSaveEditor

      - name: zip
        run: |
          ver="${{ needs.PreBuild.outputs.version }}"
          out="SuzerainSaveEditor-Linux-${{ matrix.arch }}-v${ver}.zip"
          test -d main.dist || { echo "main.dist not found"; exit 1; }
          rm -f "${out}"
          (cd main.dist && zip -r "../${out}" .)

      - name: upload
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.PreBuild.outputs.version }}
          files: SuzerainSaveEditor-Linux-${{ matrix.arch }}-v${{ needs.PreBuild.outputs.version }}.zip
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  BuildMacOS:
    needs: PreBuild
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: macos-15-intel
            arch: x64
          - os: macos-15
            arch: arm64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka

      - name: build
        run: |
          set -euo pipefail
          python -m nuitka main.py \
            --standalone \
            --assume-yes-for-downloads \
            --include-data-dir=Fonts=Fonts \
            --output-filename=SuzerainSaveEditor

      - name: zip
        run: |
          ver="${{ needs.PreBuild.outputs.version }}"
          out="SuzerainSaveEditor-MacOS-${{ matrix.arch }}-v${ver}.zip"
          test -d main.dist || { echo "main.dist not found"; exit 1; }
          rm -f "${out}"
          (cd main.dist && zip -r "../${out}" .)

      - name: upload
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.PreBuild.outputs.version }}
          files: SuzerainSaveEditor-MacOS-${{ matrix.arch }}-v${{ needs.PreBuild.outputs.version }}.zip
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
